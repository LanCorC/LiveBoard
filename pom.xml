<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>Server</groupId>
    <artifactId>LiveBoard</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>


    <dependencies>
        <!-- Websocket for multiplayer -->
        <dependency>
            <groupId>org.java-websocket</groupId>
            <artifactId>Java-WebSocket</artifactId>
            <version>1.5.7</version>
        </dependency>
        <!-- JSON for Java -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.18.1</version>
        </dependency>
    </dependencies>


    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

<!--        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>-->
<!--        <maven.compiler.release>${maven.compiler.target}</maven.compiler.release>-->
<!--        <maven.compiler.testSource>${maven.compiler.source}</maven.compiler.testSource>-->
<!--        <maven.compiler.testTarget>${maven.compiler.testSource}</maven.compiler.testTarget>-->
<!--        <maven.compiler.testRelease>${maven.compiler.testTarget}</maven.compiler.testRelease>-->
<!--        <mainClass>Server.ServerApplication.main</mainClass>-->
    </properties>

    <!-- jar, CLI: could not find or load main class Server.ServerApplication -->
    <!-- IMPORTANT: caused by NoClassDefFoundError: org/java_websocket/Server/WebSocketServer -->
    <!-- Notice: maven-jar-plugin -->
<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                &lt;!&ndash; Build an executable JAR &ndash;&gt;-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-jar-plugin</artifactId>-->
<!--                <version>3.4.2</version>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifest>-->
<!--                            <addClasspath>true</addClasspath>-->
<!--&lt;!&ndash;                            <classpathPrefix>lib/</classpathPrefix>&ndash;&gt;-->
<!--                            <mainClass>Server.ServerApplication</mainClass>-->
<!--                        </manifest>-->
<!--                    </archive>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->


    <!-- jar, CLI: no main manifest attribute, in ...target\LiveBoard-1.0-SNAPSHOT.jar -->
    <!-- Notice: maven-assembly-plugin -->
<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-assembly-plugin</artifactId>-->
<!--                <version>3.4.2</version>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifest>-->
<!--                            <addClasspath>true</addClasspath>-->
<!--                            <mainClass>Server.ServerApplication</mainClass>-->
<!--                        </manifest>-->
<!--                    </archive>-->
<!--&lt;!&ndash;                    <descriptorRefs>&ndash;&gt;-->
<!--&lt;!&ndash;                        <descriptorRef>jar-with-dependencies</descriptorRef>&ndash;&gt;-->
<!--&lt;!&ndash;                    </descriptorRefs>&ndash;&gt;-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

    <!-- WAR - CLI: java -jar target/LiveBoard-1.0-SNAPSHOT.war CANNOT FIND MAIN CLASS -->
    <!-- IMPORTANT: enable <packaging>war</packaging> in <project/>-->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>Server.ServerApplication</mainClass>
                        </manifest>
                    </archive>

                    <failOnMissingWebXml>false</failOnMissingWebXml>

                </configuration>
            </plugin>
        </plugins>
    </build>

<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <artifactId>maven-war-plugin</artifactId>-->
<!--                <version>3.4.0</version>-->
<!--                <configuration>-->
<!--                    <failOnMissingWebXml>false</failOnMissingWebXml>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

    <!-- Works with "mvn clean compile assembly:single" -->
<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <artifactId>maven-assembly-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifest>-->
<!--                            <mainClass>Server.ServerApplication</mainClass>-->
<!--                        </manifest>-->
<!--                    </archive>-->
<!--                    <descriptorRefs>-->
<!--                        <descriptorRef>jar-with-dependencies</descriptorRef>-->
<!--                    </descriptorRefs>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>make-assembly</id> &lt;!&ndash; this is used for inheritance merges &ndash;&gt;-->
<!--                        <phase>package</phase> &lt;!&ndash; bind to the packaging phase &ndash;&gt;-->
<!--                        <goals>-->
<!--                            <goal>single</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

</project>